{"version":3,"sources":["data.js","Main.js","Detail.js","Cart.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","qua","Item_list","props","history","useHistory","className","onClick","push","index","src","alt","width","el","Alert","Finish","Main","useState","state","state변경","alertstate","alertstate변경","Jumbotron","Button","variant","data","map","e","i","axios","get","then","copy","length","data변경","catch","alert","Detail","useParams","useEffect","arr","sessionStorage","getItem","JSON","parse","Set","setItem","stringify","session변경","cartlist","obj","find","findIndex","cartlist변경","goBack","Itme_list","list","splice","Receipt","Cart","Table","striped","bordered","hover","PrevPro","session","App","storage","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","to","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.39a9e290.chunk.js","sourcesContent":["export default [\r\n  {\r\n    id : 0,\r\n    title : \"White and Black\",\r\n    content : \"Born in France\",\r\n    price : 120000,\r\n    qua: 1\r\n  },\r\n\r\n  {\r\n    id : 1,\r\n    title : \"Red Knit\",\r\n    content : \"Born in Seoul\",\r\n    price : 110000,\r\n    qua: 5\r\n  },\r\n\r\n  {\r\n    id : 2,\r\n    title : \"Grey Yordan\",\r\n    content : \"Born in the States\",\r\n    price : 130000,\r\n    qua: 200\r\n  }\r\n] ","import { Button,Jumbotron } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport './css/Main.scss';\r\nimport { useHistory } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\n\r\nfunction Main (props){\r\n  let [ state,state변경 ] = useState(false);\r\n  let [ alertstate,alertstate변경 ] = useState(false);\r\n  return(\r\n    <div>\r\n      <Jumbotron className=\"background\">\r\n        <h1>Hello, world!</h1>\r\n         <p>\r\n          This is a simple hero unit, a simple jumbotron-style component for calling\r\n          extra attention to featured content or information.\r\n        </p>\r\n        <p>\r\n          <Button variant=\"primary\">Learn more</Button>\r\n        </p>\r\n      </Jumbotron>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {\r\n            props.data.map((e,i) => {\r\n              return(\r\n                <Item_list el={e} index={i} key={i}/>\r\n              )\r\n            })\r\n          }\r\n          {\r\n            state === true ? <Alert/> : null\r\n          }\r\n          {\r\n            alertstate === true ? <Finish/> : null\r\n          }\r\n        </div>\r\n        <Button variant=\"success\" className=\"ml-4\" onClick={() => {\r\n          state변경(true);\r\n          axios.get('https://codingapple1.github.io/shop/data2.json')\r\n          .then((data) => {\r\n            state변경(false);\r\n            let copy = [...props.data];\r\n            if(copy.length >= 6){\r\n              alertstate변경(true);\r\n            }\r\n            else{\r\n              data.data.map((e,i,el) => {\r\n                copy = [...props.data, ...el];\r\n              })\r\n            }\r\n            props.data변경(copy);\r\n          })\r\n          .catch(() => {\r\n            state변경(false);\r\n            alert('실패');\r\n          })\r\n        }}>더 보기</Button>{' '}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nfunction Item_list(props) {\r\n  let history = useHistory();\r\n  return(\r\n    <div className=\"col-md-4 center\" onClick={() => { \r\n      history.push(`/Detail/${props.index + 1}`);\r\n     }}>\r\n      <img src={`https://codingapple1.github.io/shop/shoes${props.index + 1}.jpg`} alt=\"아이템\" width=\"100%\"/>\r\n      <h4>{props.el.title}</h4>\r\n      <p>{props.el.content}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Alert(){\r\n  return(\r\n    <>\r\n      <h2>로딩중입니다.</h2>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction Finish (){\r\n  return(\r\n    <>\r\n      <h2>더 이상 상품이 없습니다.</h2>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Main;","import { useParams } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport './css/Detail.scss';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction Detail (props){\r\n  let { id } = useParams();\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n   let arr = sessionStorage.getItem('watched');\r\n   if ( arr === null ){\r\n     arr = []\r\n   }\r\n   else{\r\n     arr = JSON.parse(arr);\r\n   }\r\n\r\n   arr.push( id );\r\n   arr = new Set(arr);\r\n   arr = [...arr];\r\n\r\n   sessionStorage.setItem('watched',JSON.stringify(arr));\r\n   props.session변경(arr);\r\n  },[])\r\n  return(\r\n\r\n  <div className=\"container\">\r\n    <div className=\"row\">\r\n      <div className=\"col-md-6\">\r\n        <img src={`https://codingapple1.github.io/shop/shoes${id}.jpg`} alt=\"아이템\" width=\"100%\"/>\r\n      </div>\r\n      <div className=\"col-md-6 flexCenter\">\r\n        <h4>상품명:{ props.data[ id -1 ].title }</h4>\r\n        <p>만들어진 위치:{ props.data[ id -1 ].content }</p>\r\n        <p>가격:{ props.data[ id -1 ].price }</p>\r\n        <p>id:{ props.data[ id -1 ].id }</p>\r\n        <div>\r\n          <Button variant=\"danger\" onClick={() => {\r\n            let copy = [...props.cartlist];\r\n            let obj = {id :  props.data[ id -1 ].id, title: props.data[ id -1 ].title, content:props.data[ id -1 ].content, price: props.data[ id -1].price, qua: props.data[ id -1 ].qua}\r\n            let find =copy.findIndex((e) => {return e.id === obj.id});\r\n            if(find >= 0){\r\n              copy[find].qua++;\r\n            }\r\n            else{\r\n              copy.push(obj);\r\n              props.cartlist변경(copy);\r\n            }\r\n            history.push('/Cart');\r\n\r\n          }}>장바구니 추가</Button>\r\n          <Button variant=\"light\" onClick={() => {\r\n            history.goBack();\r\n          }}>뒤로가기</Button> \r\n        </div>\r\n      </div>\r\n     </div>\r\n  </div>\r\n  )\r\n};\r\n\r\n\r\nexport default Detail;","import { Table,Button } from 'react-bootstrap';\r\nimport './css/cart.scss';\r\nimport React, { useEffect, useState } from 'react'; \r\n\r\nfunction Cart (props){\r\n  let [state,state변경] = useState(false);\r\n\r\n  return(\r\n    <div>\r\n      <Table striped bordered hover variant=\"dark\" className=\"center\">\r\n        <thead>\r\n          <tr>\r\n            <th>id</th>\r\n            <th>상품명</th>\r\n            <th>생산지</th>\r\n            <th>가격</th>\r\n            <th>수량</th>\r\n            <th></th>\r\n            <th>삭제</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            props.cartlist.map((e,i) => {\r\n              return(\r\n                <Itme_list el={e} index={i} cartlist={ props.cartlist } cartlist변경={ props.cartlist변경 }/>\r\n              )\r\n            })\r\n          }\r\n        </tbody>\r\n      </Table>\r\n      {\r\n        props.cartlist.map((e) => {\r\n          return(\r\n            state === true ? <Receipt list={ e } />: null\r\n          )\r\n        })\r\n      }\r\n      <div className=\"order\">\r\n        <Button variant=\"secondary\" onClick={() => {\r\n          if(props.cartlist.length === 0){\r\n            alert('상품이 없습니다');\r\n            return;\r\n          }\r\n          else{\r\n            state변경(true);\r\n          }\r\n        }}>구매하기</Button>{''}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Itme_list(props){\r\n  return(\r\n    <>\r\n      <tr>\r\n        <td>{props.el.id}</td>\r\n        <td>{props.el.title}</td>\r\n        <td>{props.el.content}</td>\r\n        <td>{props.el.price}</td>\r\n        <td>{props.el.qua}</td>\r\n        <td>\r\n          <button onClick={() => {\r\n            let list = [...props.cartlist];\r\n            list[props.index].qua++;\r\n            props.cartlist변경(list);\r\n          }}>+</button>\r\n          <button onClick={() => {\r\n            let list = [...props.cartlist];\r\n            if(list[props.index].qua === 0){\r\n              return list;\r\n            }\r\n            else{\r\n              list[props.index].qua--;\r\n            }\r\n            props.cartlist변경(list);\r\n          }}>-</button>\r\n        </td>\r\n        <td>\r\n          <button onClick={() => {\r\n            let list = [...props.cartlist];\r\n            list.splice(props.index, 1);\r\n            props.cartlist변경(list);\r\n          }}>X</button>\r\n        </td>\r\n      </tr>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nfunction Receipt(props){\r\n  return(\r\n    <>\r\n      <div className=\"page\">\r\n        <p>상품명{ props.list.title }</p>\r\n        <p>가격{}</p>\r\n        <p>수량{}</p>\r\n        <p>총 합계{}</p>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Cart;","/*eslint-disable*/\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './css/App.scss'\nimport { Route,Switch,Link } from 'react-router-dom'\nimport data from './data';\nimport Main from './Main';\nimport Detail from './Detail';\nimport Cart from './Cart';\nimport { Navbar,Nav } from 'react-bootstrap';\n\nfunction App() {\n  let [state,state변경] = useState(data);\n  let [ cartlist,cartlist변경 ] = useState([]);\n  let [session,session변경] = useState(null);\n  useEffect(() => {\n    if( sessionStorage.getItem('watched' === null)){\n      return;\n    }\n    else{\n      let storage = sessionStorage.getItem('watched');\n      storage = JSON.parse(storage);\n      session변경(storage);\n    }\n  },[]);\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link><Link to=\"/\">Home</Link></Nav.Link>\n            <Nav.Link><Link to=\"/Detail/1\">Detail</Link></Nav.Link>\n            <Nav.Link><Link to=\"/cart\">Cart</Link></Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <Switch>\n        <Route path=\"/Detail/:id\">\n          <Detail data={ state } data변경={ state변경 } cartlist={ cartlist } cartlist변경={ cartlist변경 } session변경={ session변경 }/>\n        </Route>\n\n        <Route path=\"/Cart\">\n          <Cart cartlist={ cartlist } cartlist변경={ cartlist변경 }/>\n        </Route>\n\n        <Route path=\"/\">\n          <Main data={ state } data변경={ state변경 }/>\n          <div className=\"item_list\">\n            <p>최근 본 상품</p>\n            {\n              session === null ?\n              null : <PrevPro session={ session }/>\n            }\n          </div>\n        </Route>\n\n      </Switch>\n    </div>\n  );\n}\n\nfunction PrevPro(props){\n  let history = useHistory();\n  return(\n    props.session.map((e,i) => {\n      return(\n        <div key={i} onClick={() => {\n          history.push(`/Detail/${e}`);\n        }}>\n           <img src={`https://codingapple1.github.io/shop/shoes${e}.jpg`} alt=\"최근 상품\" width=\"100%\"/>\n        </div>\n      )\n    })\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n        <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}